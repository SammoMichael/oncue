{"version":3,"sources":["logo.svg","components/TruckForm.js","components/jobs/JobItem.js","components/TruckItem.js","components/jobs/JobForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TruckForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callBackendAPI","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","settings","response","body","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","_x","apply","arguments","state","name","start_time","end_time","update","bind","assertThisInitialized","handleSubmit","property","_this2","e","setState","defineProperty","target","value","event","_this3","preventDefault","method","JSON","stringify","headers","Accept","Content-Type","then","res","data","catch","err","console","log","react_default","createElement","className","onSubmit","placeholder","type","onChange","required","Component","JobItem","date","TruckItem","jobs","map","job","jobs_JobItem","assign","key","id","JobForm","truck_id","availability","check_available","convertTime","time","slice","parseInt","checkable_jobs","filter","length","_this4","availableTrucks","values","i","truck","push","_this5","alert","window","location","reload","App","trucks","components_TruckItem","components_TruckForm","jobs_JobForm","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dfd477a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport React, { Component } from 'react';\n\nclass TruckForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      start_time: '7am',\n      end_time: '8pm'\n  };\n    this.update = this.update.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n}\n\n  update(property) {\n    return e => \n    this.setState({[property]: e.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    var settings = {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }\n    this.callBackendAPI(settings)\n      .then(res => this.setState({ data: res }))\n      .catch(err => console.log(err));\n  }\n  callBackendAPI = async (settings) => {\n    const response = await fetch('http://localhost:3000/api/trucks', settings)\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <form className=\"truck-form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input placeholder=\"Name of truck\" type=\"text\" value={this.state.name} onChange={this.update('name')} />\n        </label>\n        <label>\n         Start Time:\n          <select placeholder=\"Choose a start time\" \n            required \n            name=\"Start Time\" \n            type=\"text\" \n            value={this.state.start_time}\n            onChange={this.update('start_time')} >\n            <option value=\"7am\">7am</option>\n            <option value=\"8am\">8am</option>\n            <option value=\"9am\">9am</option>\n            <option value=\"10am\">10am</option>\n            <option value=\"11am\">11am</option>\n            <option value=\"12am\">12am</option>\n            <option value=\"1pm\">1pm</option>\n            <option value=\"2pm\">2pm</option>\n            <option value=\"3pm\">3pm</option>\n            <option value=\"4pm\">4pm</option>\n            <option value=\"5pm\">5pm</option>\n            <option value=\"6pm\">6pm</option>\n            <option value=\"7pm\">7pm</option>\n            <option value=\"8pm\">8pm</option>\n          </select>\n        </label>\n        <label>\n         End Time:\n          <select placeholder=\"Choose a end time\" \n            required \n            name=\"End Time\" \n            type=\"text\" \n            value={this.state.end_time}\n            onChange={this.update('end_time')} >\n            <option value=\"7am\">7am</option>\n            <option value=\"8am\">8am</option>\n            <option value=\"9am\">9am</option>\n            <option value=\"10am\">10am</option>\n            <option value=\"11am\">11am</option>\n            <option value=\"12am\">12am</option>\n            <option value=\"1pm\">1pm</option>\n            <option value=\"2pm\">2pm</option>\n            <option value=\"3pm\">3pm</option>\n            <option value=\"4pm\">4pm</option>\n            <option value=\"5pm\">5pm</option>\n            <option value=\"6pm\">6pm</option>\n            <option value=\"7pm\">7pm</option>\n            <option value=\"8pm\">8pm</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default TruckForm;","import React, { Component } from 'react'\n\nclass JobItem extends Component {\n  render() {\n    //   const estimate = parseInt(this.props.end_time) - parseInt(this.props.start_time) + 'hrs'\n    return (\n      <div>\n        <li>{this.props.name}</li>\n        <li>{this.props.date}</li>\n        <li>{this.props.start_time}</li>\n        <li>{this.props.end_time}</li>\n      </div>\n    )\n  }\n}\n\nexport default JobItem\n","import React, { Component } from 'react'\nimport JobItem from './jobs/JobItem'\n\nclass TruckItem extends Component {\n  render() {\n      const jobs = this.props.jobs.map(job => <JobItem key={job.id} {...job}></JobItem>)\n    return (\n      <div>\n        {this.props.name} assignments\n        <ul>\n        {jobs}\n        {jobs}\n        {jobs}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default TruckItem\n","\nimport React, { Component } from 'react';\n\nclass JobForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      start_time: '7am',\n      end_time: '8pm',\n      date: 'dd/mm/yyyy',\n      truck_id: ''\n  };\n    this.update = this.update.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.availability = this.availability.bind(this)\n    this.check_available = this.check_available.bind(this)\n    this.convertTime = this.convertTime.bind(this)\n}\n\n  update(property) {\n    return e => \n    this.setState({[property]: e.target.value})\n  }\n\n  convertTime(time) {\n    let newTime;\n    if (time.slice(-2) === \"pm\") {\n      newTime = parseInt(time) + 12\n    } else {\n      newTime = parseInt(time)\n    }\n    return newTime\n  }\n\n  check_available(checkable_jobs) {\n      return checkable_jobs.filter(job => !((this.convertTime(this.state.start_time) < this.convertTime(job.start_time) && this.convertTime(this.state.end_time+12) <= this.convertTime(job.start_time)) || (this.convertTime(this.state.start_time) >= this.convertTime(job.end_time) && this.convertTime(this.state.end_time) > this.convertTime(job.end_time)))).length\n    }\n\n  availability() {\n    var availableTrucks = []\n    const length = Object.values(this.props).length\n    for (let i = 0; i < length; i++) {\n      // debugger\n      var truck = this.props[i];\n      console.log(truck)\n\n      const jobs = truck.props.jobs\n      console.log(jobs)\n      var checkable_jobs = jobs.filter(job => job.date === this.state.date)\n      if (!this.check_available(checkable_jobs || !checkable_jobs)) { availableTrucks.push(truck.props.id)}\n      console.log(availableTrucks)\n    }\n    return availableTrucks[0]\n    \n  } \n\n  handleSubmit(event) {\n    event.preventDefault()\n    var body = this.state\n    body.truck_id = this.availability()\n\n    // this.state.truck_id = this.availability();\n    // this.setState({truck_id: this.availability()})\n    if (typeof body.truck_id === \"undefined\" || body.truck_id === '') {\n      return alert('No Availability choose another time')\n    } \n    \n    console.log(this.state)\n    \n    var settings = {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }\n    this.callBackendAPI(settings)\n      .then(res => this.setState({ data: res }))\n      .catch(err => console.log(err));\n      window.location.reload()\n  }\n  callBackendAPI = async (settings) => {\n    const response = await fetch('http://localhost:3000/api/jobs', settings)\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <form className=\"truck-form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input placeholder=\"Name of person\" type=\"text\" value={this.state.name} onChange={this.update('name')} />\n        </label>\n        <label>\n          Move Date\n          <input placeholder=\"dd/mm/yyyy\" type=\"text\" value={this.state.date} onChange={this.update('date')} />\n        </label>\n        <label>\n         Start Time:\n          <select placeholder=\"Choose a start time\" \n            required \n            name=\"Start Time\" \n            type=\"text\" \n            value={this.state.start_time}\n            onChange={this.update('start_time')} >\n            <option value=\"7am\">7am</option>\n            <option value=\"8am\">8am</option>\n            <option value=\"9am\">9am</option>\n            <option value=\"10am\">10am</option>\n            <option value=\"11am\">11am</option>\n            <option value=\"12am\">12am</option>\n            <option value=\"1pm\">1pm</option>\n            <option value=\"2pm\">2pm</option>\n            <option value=\"3pm\">3pm</option>\n            <option value=\"4pm\">4pm</option>\n            <option value=\"5pm\">5pm</option>\n            <option value=\"6pm\">6pm</option>\n            <option value=\"7pm\">7pm</option>\n            <option value=\"8pm\">8pm</option>\n          </select>\n        </label>\n        <label>\n         End Time:\n          <select placeholder=\"Choose a end time\" \n            required \n            name=\"End Time\" \n            type=\"text\" \n            value={this.state.end_time}\n            onChange={this.update('end_time')} >\n            <option value=\"7am\">7am</option>\n            <option value=\"8am\">8am</option>\n            <option value=\"9am\">9am</option>\n            <option value=\"10am\">10am</option>\n            <option value=\"11am\">11am</option>\n            <option value=\"12am\">12am</option>\n            <option value=\"1pm\">1pm</option>\n            <option value=\"2pm\">2pm</option>\n            <option value=\"3pm\">3pm</option>\n            <option value=\"4pm\">4pm</option>\n            <option value=\"5pm\">5pm</option>\n            <option value=\"6pm\">6pm</option>\n            <option value=\"7pm\">7pm</option>\n            <option value=\"8pm\">8pm</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default JobForm\n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TruckForm from './components/TruckForm';\nimport TruckItem from './components/TruckItem';\nimport JobForm from './components/jobs/JobForm';\n\nclass App extends Component {\nstate = {\n    data: null\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('http://localhost:3000/api/trucks')\n    const body = await response.json();\n    // const body = response\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    const data = this.state.data\n    var trucks;\n    if(this.state.data) {\n      trucks = data.trucks.map ((truck, id) => <TruckItem key={id} {...truck}></TruckItem> )\n    } else {\n      trucks = \"...loading\"\n    }\n    console.log(trucks)\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h1 className=\"App-title\">Oncue</h1>\n          <TruckForm />\n          <JobForm {...trucks}/>\n          {trucks}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}